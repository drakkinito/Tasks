@model TaskList;
@using Tasks.HtmlHelper

@{
    ViewData["Title"] = "Index";
    ViewData["IndexActive"] = "active";
}

<div>
    <h3>For @DateTime.Now.ToString("MMMM dd", new System.Globalization.CultureInfo("en-US"))</h3>
    <div class="dropdown">
        <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown">
            @Model.Filter.StateName
        </button>
        <ul class="dropdown-menu">
            @foreach (var state in Model.States)
            {
                <li>
                    <a asp-action="Index" asp-route-stateOrder="@state.Key" class="dropdown-item @(Model.Filter.StateOrder == state.Key ? "active" : "")">@state.Value</a>
                </li>
            }
        </ul>
    </div>
</div>
<div class="page-content page-container">
    <div class="row d-flex mt-2 justify-content-center">
        <div class="row col-sm-8 w-100 m-0">
            @if (Model.ExpiredTaskItems.Any())
            {
                @Html.StateName("Expired task")
                await Html.RenderPartialAsync("PartialView/_DisplaySection", new DisplaySection { Items = Model.ExpiredTaskItems, States = Model.States, StyleValue = "border-danger" });
            }

            @for (int i = 1; i <= 3; i++)
            {
                if (Model.Items.Any(t => t.StateId == i))
                {
                    @Html.StateName(Model.States[i]);
                    await Html.RenderPartialAsync("PartialView/_DisplaySection", new DisplaySection { Items = Model.Items.Where(t => t.StateId == i).ToList(), States = Model.States });
                }
                else
                {
                    @if (Model.Filter.StateOrder == i || Model.Filter.StateOrder == 0)
                    {
                        @Html.StateName(Model.States[i]);
                        <p>Empty</p>
                    }
                }
            }
        </div>
    </div>
</div>
